package client;

import java.util.Collection;

import org.osgi.framework.BundleContext;
import org.osgi.framework.InvalidSyntaxException;
import org.osgi.framework.ServiceReference;

import magasin.ServiceAchat;

public class ThreadClient extends Thread {

	// Délai entre chaque commande
	public static final int delai = 10000;
	// Context du bundle lié au Thread
	private BundleContext context = null;

	/**
	 * Constructeur, le Thread a besoin du BundleContext pour rechercher le
	 * service
	 *
	 * @param aContext
	 */
	public ThreadClient(BundleContext aContext) {
		context = aContext;
	}

	/**
	 * Méthode run qui sera appelée par the Thread.start()
	 */
	public void run() {
		Client client1 = new Client();
		Client client2 = new Client();
	}

	/**
	 * Implémentation des Traitements du Thread
	 * 
	 * @throws InvalidSyntaxException
	 */
	private void commander(Client client) throws InvalidSyntaxException {
		// Récupération du service
		Collection<ServiceReference<ServiceAchat>> serviceAchatServiceReferences = context.getServiceReferences(ServiceAchat.class,
				null);
		for (ServiceReference<ServiceAchat> serviceAchat : serviceAchatServiceReferences) {
			if (serviceAchat == null) {
				System.out.println("\n**************\nAucun service disponible");
			} else {
				System.out.println("\n**************\nAppel du service:" + carRepart.getClass() + "\nDu bundle:"
						+ carRepart.getBundle().getSymbolicName() + "\nPour la voiture:" + aCar.getId() + ","
						+ aCar.getClass() + "," + aCar.getCurrentStatus());
				CarRepairer myService = context.getService(carRepart);
				// Appel du service
				try {
					myService.repairCar(aCar);
					System.out.println(
							"La voiture a bien été traitée : " + aCar.getClass() + ":" + aCar.getCurrentStatus());
				} catch (CarRepairException e) {
					System.out.println("Erreur la voiture n'est pas au bon statut pour ce service : " + aCar.getClass()
							+ ":" + aCar.getCurrentStatus());
				}
				// Libération du service
				context.ungetService(carRepart);
			}
		}

	}

}
